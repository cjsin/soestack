{#- This template is passed the following variables:  #}
{#-    - tftpdir - the path to the tftp files #}
{#-    - interfaces - a list of interface names - eg ['eth0'] #}
{#-    - lans - a map of lan info - contains the subnet, menu entries, commandline boot options #}
{#-    - hostdata - a map of name:clientinfo (contains IP, mac, etc) #}
{#-    - client_names - a list of client names (may be empty) #}
{#-    - pxe_server - the host IP #}

port=0
enable-tftp 
tftp-root={{tftpdir}}
dhcp-boot=pxelinux.0
{%- for iface in interfaces %}
interface={{iface}}
{%- endfor %}
{%- for lan_name,lan in lans.iteritems() %}
{%-     if 'static' in lan and lan.static and 'subnet' in lan and lan.subnet %}
{%-        set subnet=lan.subnet.split('.') %}
{#-        # Shitty jinja has no while loops, yay, so we have to repeat this 4 times. love it. #}
{%-        if subnet|length < 4 %}
{%-            do subnet.append("0") %}
{%-        endif %}
{%-        if subnet|length < 4 %}
{%-            do subnet.append("0") %}
{%-        endif %}
{%-        if subnet|length < 4 %}
{%-            do subnet.append("0") %}
{%-        endif %}
{%-        if subnet|length < 4 %}
{%-            do subnet.append("0") %}
{%-        endif %}
dhcp-range={{'.'.join(subnet)}},static
{%-         for client_name in client_names %}
{%-             set client = hostdata[client_name] if client_name in hostdata else {} %}
{%-             if client %}
{%-                 if 'ip' in client and client.ip and 'mac' in client and client.mac and 'type' in client and client.type == 'client' %}
{%-                     if client.ip.startswith(lan.subnet~'.') %}
dhcp-host={{client.mac}},{{client.ip}},{{client_name}}.{{pillar.network.system_domain}}
{%-                     endif %}
{%-                 endif %}
{%-             endif %}
{%-         endfor %}
{%-     elif 'range_start' in lan and lan.range_start and 'range_end' in lan and lan.range_end %}
{%-         set lease_time = ',' ~ lan.lease_time if 'lease_time' in lans else '' %}
dhcp-range={{lan.range_start}},{{lan.range_end}}{{lan.lease_time}}
{%-     endif %}
{%- endfor %}
except-interface=lo
dhcp-boot=pxelinux.0,,{{pxe_server}}
log-dhcp
bind-dynamic

# Ignore unknown hosts
dhcp-ignore=tag:!known

{%- set nameservers = [] %}
{%- for key in pillar.dns.nameservers.keys()|sort %}
{%-     set val = pillar.dns.nameservers[key] %}
{%-     if val is defined and val != '' %}
{%-         do nameservers.append(val) %}
{%-     endif %}
{%- endfor %}
{%- set search = [] %}
{%- for key in pillar.dns.search.keys()|sort %}
{%-     set val = pillar.dns.search[key] %}
{%-     if val is defined and val != '' %}
{%-         do search.append(val) %}
{%-     endif %}
{%- endfor %}

dhcp-option-force=option:domain-search,{{','.join(search)}}
#dhcp-option-force=option:router,{{pillar.network.gateway}}
dhcp-option-force=option:dns-server,{{','.join(nameservers)}}
dhcp-option-force=option:domain-name,{{pillar.network.system_domain}}
dhcp-option-force=option:ntp-server,0.0.0.0
dhcp-option-force=option:tftp-server,0.0.0.0
dhcp-option-force=option:log-server,0.0.0.0
dhcp-option-force=101,"{{pillar.timezone}}"
domain={{pillar.network.system_domain}}
local=/{{pillar.network.system_domain}}/
dhcp-ignore-names

#!/bin/bash

ticket_dir="/var/cache/salt/master"
KRB5CCNAME="${ticket_dir}/salt.krb"
HELP_REGEX='(^|[[:space:]])(-h|-help|--help|help)([[:space:]]|$)'

function msg()
{
    echo "${*}" 1>&2
}

function err()
{
    msg "ERROR: ${*}" 
    return 1
}

function die()
{
    msg "FATAL: ${*}"
    exit 1
}

function usage()
{
    msg "Usage: ${0} [--help | --renew | --list | --shell ]"
    msg ""
    msg "Renew kerberos ticket for Saltstack / IPA integration"
    msg ""
    msg "Modes:"
    msg ""
    msg "   --renew   Renew the ticket"
    msg "   --list    Display the ticket"
    msg "   --shell   Load the ticket and drop into a new shell (using that ticket)"
}


function list_ticket()
{
    if [[ -f "${KRB5CCNAME}" ]]
    then 
        export KRB5CCNAME
        klist
    else
        msg "No current ticket"
    fi
}

function renew_ticket()
{
    mkdir -p "${ticket_dir}"

    local admin_password=$(salt-secret pw-ipa-admin)

    if [[ -n "${admin_password}" ]]
    then 
        msg "Using randomly generated IPA passwords during install."

        # Load pregenerated passwords
        kinit admin <<< "${admin_password}"
    elif [[ -t 0 ]]
    then
        l=7
        r=9
        msg "Requesting renewable ticket. The ticket will work for ${l} days. Admin will need to renew each ${r} days."
        msg "NOTE: the ticket is valid for use on this host only."
        kinit -l "${l}d" -r "${r}d" -a admin
    else
        err "Past install phase and a tty is not available for entering the password"
        return 1
    fi
}

function main()
{
    if ! (( {%raw%}$#{%endraw%} ))
    then
        usage 
        exit 1
    elif [[ "${*}" =~ ${HELP_REGEX} ]]
    then
        usage
        exit 0
    else
        export KRB5CCNAME
        case "${1}" in 
            -l|-list|--list|list)
                list_ticket
                ;;
            -r|-renew|--renew|renew)
                renew_ticket
                ;;
            -s|-shell|--shell|shell)
                shift
                bash "${@}"
                ;;
            *)
                usage
                exit 1
                ;;
        esac 
    fi 
}

main "${@}"

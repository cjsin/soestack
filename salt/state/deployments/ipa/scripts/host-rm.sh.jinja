#!/bin/bash

. /usr/local/sbin/lib-ipa.sh

fqdn=""
host_ip=""
deregister=1

function usage()
{
    echo "Usage: ${0##*/} [options] [<hostname>] [IP]"
    echo ""    
    echo "De-register a host from IPA or remove DNS entries"
    echo ""
    echo "Options:"
    echo ""
    echo "  -i <IP>       Specify the IP address."
    echo "  -n <name>     Specify the host name."
    echo "  -d <domain>   Specify the domain name."
    echo "  -f <fqdn>     Specify the fully qualified domain name (hostname.domain)."
}

function process_argv()
{
    local arg i d f n 

    while (( $# ))
    do
        arg="${1}"
        shift 
        
        case "${arg}" in
            -h|-help|--help) 
                usage
                exit 0
                ;;
            -dns-only|--dns-only)
                deregister=0
                ;;
            -i|--ip|-ip)
                i="${1}"
                shift
                ;;
            -n|--name|-name)
                n="${1}"
                shift
                ;;
            -f|--fqdn|-fqdn)
                f="${1}"
                shift
                ;;
            -d|--domain|-domain)
                d="${1}"
                shift
                ;;
            [0-9]*)
                i="${arg}"
                shift
                ;; 
            [a-zA-Z]*.*)
                f="${arg}"
                ;;
            [a-zA-Z]*)
                n="${arg}"
                ;;
            *)
                usage
                die "Unrecognised option: '${arg}'"
                ;;
        esac
    done 

    [[ -n "${i}" && ! "${i}" =~ ${ip_regex} ]] && die "Invalid IP address: '${i}'" 
    [[ -n "${f}" && ! "${f}" =~ [.] ]] && die "FQDN does not include a domain: '${f}'"
    [[ -n "${f}" && ! "${f}" =~ [.][^.] ]] && die "FQDN does include a domain: '${f}'"
    [[ -n "${f}" && "${f}" =~ ^[.] ]] && die "FQDN cannot start with a dot: '${f}'"

    [[ -n "${d}" && -n "${f}" ]] && die "Mutually exclusive options (domain and fqdn)."
    [[ "${n}" =~ [.] ]] && die "Name option does not accept fully qualified names. Use the -f option"

    if [[ -z "${f}" ]]
    then
        if [[ -n "${n}" && -n "${d}" ]]
        then
            f="${n}.${d}."
        elif [[ -n "${n}" ]]
        then 
            d="${default_regular_zone%.}"
            f="${n}.${d}."
        else
            die "At least a node name must be specified!"
        fi
    else
        d="${f#*.}"
        n="${f%%.*}"
        f="${f%.}."
    fi

    [[ ! "${f}" =~ ${fqdn_regex} ]] && die "Invalid host name: '${f}'"
    [[ -n "${i}" && ! "${i}" =~ ${ip_regex} ]] && die "Invalid IP address: '${i}'"
    
    fqdn="${f%.}."

    [[ -n "${i}" ]] && host_ip="${i}"

    if [[ -z "${host_ip}" ]]
    then 
        local -a lookup_results=( $(lookup_host_info "${fqdn}") )
        [[ -z "${host_ip}" && "${lookup_results[0]}" != "-" ]] && host_ip="${lookup_results[0]}"
    fi

    [[ -z "${host_ip}" ]] && die "No MAC information specified and not found from salt host lookup"

    # At the end of argument processing, we need to have a valid:
    #   fqdn (with dot at the end)
    #   host_ip 
}

function main()
{
    process_argv "${@}"
    host_rm "${fqdn}" "${deregister}"
}

main "${@}"

#!/bin/bash

{%- set hostname = grains.fqdn %}
{%- set hostname_components = hostname.split('.') %}
{%- set hostname_domain = '.'.join(hostname_components[0:-1]) %}

{%- set install   = config.install %}
{%- set passwords = {'ds': 'ds', 'master': 'master', 'admin': 'admin'} %}
{%- set ip        = config.ip if 'ip' in config else grains.fqdn_ip4[0] %}
{%- set fqdn      = grains.fqdn if 'fqdn' not in config or config.fqdn == 'auto' else config.fqdn %}
{%- set realm     = config.realm if 'realm' in config else 'IPA' %}
{%- set domain    = config.domain if 'domain' in config else hostname_domain %}

DEBUG="{{'echo' if 'debug' in install and install.debug else ''}}"

function die()
{
    echo "ERROR: ${*}" 1>&2
    exit 1
}

function uninstall_first()
{
    if [[ -f /var/log/ipa-install.log ]]
    then
        ipa-server-install --uninstall -U 
    fi
}

install_server()
{
    # Load pregenerated passwords
    . "{{pwfile}}"

    [[ -n "${master_password}" ]] || die "No random ipa passwords generated!"

    local -a options=(
        # Skip dns check
        "--no-host-dns"
        # Skip another dns check
        "--allow-zone-overlap"

        "--mkhomedir"
        "--ssh-trust-dns"

        "--realm={{realm}}"
        "--domain={{domain}}"
        "--hostname={{fqdn}}"
        "--ip-address={{ip}}"
        "--no-host-dns"

        {%- if install.dns.enabled %}
        "--setup-dns"
        {#  forwarders during installation are disabled because it always fails #}
        {#  Instead - forwarders are configured later #}
        {%- if True %}
        "--no-forwarders"
        {%- else %}
        {%- for f in install.dns.forwarders %}
        "--forwarder={{f}}"
        {%- endfor %}
        {%- endif %}
        # "--reverse-zone={{''}}"
        # "--auto-reverse"
        "--reverse-zone=$(echo "{{ip}}" | tr '.' '\n' | head -n3 | tac|tr '\n' '.' )in-addr.arpa."
        {%- endif %} 

        # "--master-password=${master_password}"
        "--admin-password=${admin_password}"
        "--ds-password=${ds_password}"
    )

    # The installation is performed with selinux disabled 
    # and the firewall rules flushed, because it has troubles otherwise.
    # The rules it requires can be configured after
    setenforce 0
    iptables -F
    iptables -nvL
    ${DEBUG} ipa-server-install -U "${options[@]}"
    setenforce 1
    systemctl restart iptables
    
}

uninstall_first
if install_server
then

    mkdir -p /var/cache/salt/master
    export KRB5CCNAME=/var/cache/salt/master/salt.krb
    kinit admin <<< "${admin_password}"

    /usr/local/sbin/ipa-postinstall-{{deployment_name}}
fi

#!/bin/bash

. /usr/local/bin/lib-ss.sh || exit 1

function salt-deploy::usage()
{
    msg "Usage: salt-deploy [ <deployment-name> |  -type <deployment-type> ]"
    msg ""
    msg "Run a salt state to (re)deploy only the specific named deployment, "
    msg "  or all of the specified deployment type"
    msg ""
    msg "Options:"
    msg "  --test=True                            enable test mode"
    msg "  --state-output=<terse|full|changes>    set the output mode"
    msg "  -ldebug | -lwarn | -linfo              set the output verbosity"
    msg "  --name  | --names                      treat args as deployment names (run one)"
    msg "  --type  | -type                        treat args as deployment types (run all of that type)"
}

function salt-deploy::process-argv()
{
    local arg
    while (( $# )) 
    do
        arg="${1}"
        shift
        case "${arg}" in
            -h|-help|--help|help)
                salt-deploy::usage
                return 1
                ;;
            -type|--type)
                mode="typed"
                ;;
            -name|--name|-names|--names)
                mode="named"
                ;;
            -ldebug|-lwarn|-linfo)
                debug_flag="${arg}"
                ;;
            --test|--test=True|-test|test=True)
                test_flag="test=True"
                ;;
            --state-output=*)
                state_output="${arg}"
                ;;
            [a-zA-Z]*)
                names+=("${arg}")
                ;;
            *)
                salt-deploy::usage
                return 2
                ;;
        esac
    done

    return 0
}

function salt-deploy::run-named-deployment()
{
    local deployment_name="${1}"
    local actions="${2:-auto}"
    shift 2
    local flags=("${@}")
    msg "Deploying ${deployment_name} with actions ${actions}"
    salt-call state.sls deployments.deploy-cmdline pillar="{\"cmdline-args\": { \"deploy-cmdline\": { \"deployment_name\": \"${deployment_name}\", \"actions\": \"${actions// /,}\" } } }" "${flags[@]}"
}

function salt-deploy::run-typed-deployment()
{
    local deployment_type="${1}"
    local actions="${2:-auto}"
    shift 2
    local flags=("${@}")
    
    msg "Deploying deployments of type ${deployment_type} with actions ${actions}"
    salt-call state.sls deployments.deploy-cmdline pillar="{\"cmdline-args\": { \"deploy-cmdline\": { \"deployment_type\": \"${deployment_type}\", \"actions\": \"${actions// /,}\" } } }" "${flags[@]}"
}

function salt-deploy::main()
{
    local mode="named"
    local names=()
    local actions=()
    local status
    local test_flag=""
    local debug_flag=""
    local state_output=""

    salt-deploy::process-argv "${@}"
    status=$?

    if [[ "${status}" == 1 ]]
    then 
        # help flag was specified
        return 0
    elif [[ "${status}" != 0 ]]
    then 
        return ${status}
    fi 

    local name
    for name in "${names[@]}"
    do
        "salt-deploy::run-${mode}-deployment" "${name}" "${actions[*]}" ${test_flag} ${debug_flag} ${state_output}
    done
}

salt-deploy::main "${@}"

{%- if 'client' in rsyslog and 'send' in rsyslog.client %}

module(load="omrelp")

{%-     for server, params in rsyslog.client.send.iteritems() %}
{%-         if params.protocol in [ 'relp' ] %}

action(type="om{{params.protocol}}" name="om{{params.protocol}}{{server}}" target="{{server}}" port="{{params.port}}")

{%-         else %}

action(type="omfwd" 
    # An on-disk queue is created for this action. If the remote host is
    # down, messages are spooled to disk and sent when it is up again.
    queue.filename="fwdRule{{server}}" # unique name prefix for spool files
    queue.maxdiskspace="1g"         # 1gb space limit (use as much as possible)
    queue.saveonshutdown="on"       # save messages to disk on shutdown
    queue.type="LinkedList"         # run asynchronously
    action.resumeRetryCount="-1"    # infinite retries if host is down
    # remote_host is: name/ip, e.g. 192.168.0.1, port optional e.g. 10514
    Target="{{server}}" Port="{{params.port}}" Protocol="{{params.protocol}}")

{#-         end if relp or other #}
{%-         endif %}

{#-     end for each send specification #} 
{%-     endfor %}

{#- end if client enabled #}
{%- endif %}

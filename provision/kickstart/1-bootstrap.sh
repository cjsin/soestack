#!/bin/bash

# Make sure that any errors cause a failure not an install
# because if a problem happens then it may have happened
# before the user confirmation has occurred.

lib_result=
. "${SS_DIR:=${BASH_SOURCE[0]%/provision/*}}"/provision/kickstart/lib/lib-bootstrap.sh
lib_result=$?

if (( lib_result ))
then
    echo "Loading the SOE libs failed." 1>&2
    exit 1
fi

function completed_bootstrap()
{
    msg "Completed bootstrap: $(date)"
}

function xfs_bug_workaround()
{
    msg "XFS bug workaround."
    # There is a bug wherein the anaconda installer hangs during 'modprobe xfs'
    # however the module is loaded first, this doesn't happen.
    modprobe xfs
    msg "OK."
}

function fix_initial_dns_config()
{
    if grep -q "Generated.by.NetworkManager" /etc/resolv.conf
    then 
        spam msg "Some rubbish is installed. Activating workarounds."
    fi

    # NetworkManager, the piece of rubbish that it is, ignores
    # the dhcp DNS options, and for some reason configures the 
    # network gateway as the DNS server.
    #
    # So, fix the /etc/resolv.conf in the boot environment as
    # soon as possible (after calculating/loading kickstart vars).

    if [[ -n "${NAMESERVER}" ]]
    then 
        msg "FIX NetworkManager resolv.conf nameserver"
        if ! grep -q -F "nameserver ${NAMESERVER}" /etc/resolv.conf
        then
            sed -i '/^nameserver/ d' /etc/resolv.conf
            echo "nameserver ${NAMESERVER}" >> /etc/resolv.conf
        fi
        sed -i '/Generated by NetworkManager/ d' /etc/resolv.conf
    fi

    if [[ -n "${DOMAIN}" ]]
    then 
        msg "FIX NetworkManager resolv.conf search domains"
        if ! grep -q -F "search ${DOMAIN}" /etc/resolv.conf
        then
            sed -i '/^search/ d' /etc/resolv.conf
            # NOTE - shitty NetworkManager will still delete this later
            # when the network interface is (re)configured, but at 
            # least this can help with DNS lookups prior to that.
            echo "search ${DOMAIN}" >> /etc/resolv.conf
        fi
        sed -i '/Generated by NetworkManager/ d' /etc/resolv.conf
    fi
}

echo "Boot commandline is:"
cat /proc/cmdline | tr ' \0' '\n' | sort | sed 's/^/    /'

#xfs_bug_workaround

# This is done before calculating the kickstart vars, which
# will hopefully be able to use the DHCP hostname
# Therefore we cannot use 'is_standalone'
dhcp_hostname_fix

setup_symlinks

load_kickstart_vars

step fix_initial_dns_config

step generate_kickstart_networkconfig

if [[ -n "${TIMEZONE}" && -f "/usr/share/zoneinfo/${TIMEZONE}" ]]
then 
    msg "Configuring timezone in install environment"
    ln -sf "/usr/share/zoneinfo/${TIMEZONE}" /etc/localtime
fi

date

switch_to_console

# notice running from ${PWD} Install path will be ${ANA_INSTALL_PATH}

step add_hosts

step generate_repositories
step generate_timezone
step generate_selinux

date

# NOTE, the build configuration and user rebuild confirmation are 
# performed now, prior to writing configuration files which could
# cause disk partitioning to happen.
display_build_configuration

if ! is_standalone
then
    if ! check_host_recognised
    then
        exit 1
    fi
fi

set -e
user_rebuild_confirmation
set +e

step select_partitioning
step update_bootloader_password
step update_root_password
step update_ssh_password

step completed_bootstrap

if ! is_interactive
then 
    switch_to_logfile
fi


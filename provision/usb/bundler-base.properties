version  1 
verbose  1
helptext Available modes: 
helptext    Full   - Build a new image (overwriting) and copy all files (including bundled files)
helptext    Create - Build a new image (overwriting) and copy all files required for installation 
helptext             (excludes large bundled data)
helptext    Update - Update an already-built image, update boot files
helptext             (excludes large bundled data)
helptext    Quick  - Update kickstarts, provisioning, boot label etc
helptext             (excludes ISO, non-critical ISO content, and large bundled data)
helptext    Bundle - Update the large data bundles (nexus repository backup, gitlab backup, etc)
helptext    Isos   - Copy the isos on as files
helptext    SOE    - Copy the soe on
helptext    Boot   - Update bootloader only
helptext    htdocs - Update the html docs only
helptext    private - Layer of private (local, gitignored files) within the soe
helptext
helptext  Example session:
helptext
helptext   Getting started:
helptext
helptext      ss-bundler --mode=create 
helptext         (you may then test that the USB stick works to build the server)
helptext
helptext   When it is working fine, or after your backups have run, you might
helptext         update with the backup data
helptext      ss-bundler --mode=bundle
helptext   
helptext   NOTE:
helptext
helptext   The way this works, is lines are processed from the top down, 
helptext     reading an ACTION from each line -- however with a line being
helptext     ignored if in a section that specifies it is ONLY for a mode
helptext     that does not match the current selected mode (--mode commandline option).
helptext   After reaching the end of the file, the BUILDER command is invoked with a 
helptext     set of arguments that have been built up by the actions that were processed
helptext     above.
helptext
helptext   Use the 'DRY_RUN 1' action to view the command without execution.
helptext 
helptext   Good luck.

MODES    full create update quick bundle isos bootloader nexus provision menus soe htdocs private
DEFAULT  full

builder  ./build-boot-image.py
iso      ../../bundled/iso/CentOS-7-x86_64-DVD-1810.iso
label    SSBOOT

# Build up an APPEND commandline. The 'append' action here should not be 
# confused with the kernel append (although it is being used to 
# build up a commandline for a syslinux APPEND directive here) it 
# can be used to build up any variable defined with the VAR action.

var      cmdline 
append   cmdline ' '
append   cmdline inst.kexec inst.kdump_addon=off 
#append   cmdline inst.geoloc=0 inst.resolution=800x600 inst.sshd 
append   cmdline inst.ks=hd:LABEL=SSBOOT:/ks.cfg

# Use this file as the default target for subsequent edits
edit     syslinux/syslinux.cfg

################################################################
ONLY     full 
action   --patch-syslinux
action   --syslinux --overwrite

################################################################
ONLY     full menus update quick
action   --replace --match 'menu title CentOS 7' --search 'CentOS 7' --text 'SoeStack CentOS 7'

# NOTE the 'rescue quiet' is replaced first, without the 'quiet', so that the subsequent
# replacements (that substitute 'quiet' for ARGS) do not affect the 'rescue' boot entry.
action   --replace --match LABEL= --search '~ rescue quiet' --text ' rescue '

# Replace 'quiet' with the string 'ARGS', which will be used later to substitute our
# custom kernel commandline options.
action   --replace --match LABEL= --search '~ quiet.*'      --text ' ARGS '

# Disable the timeout
action   --replace --match timeout --search 'timeout 600'   --text 'timeout 0'

# Stop the 'install' action being the default - instead we want
# to make the 'boot from local drive' option the default (as a safer option).
action   --delete-near --match ~menu.default 
#action   --cat /usb/syslinux/syslinux.cfg
#action   --insert-near --match ^Install --line 1 --text "  menu default"
action   --insert-near --match 'Boot from ^local drive' --line 1 --text "  menu default"

# Subsitute our custom kernel args (built up into the cmdline var) where we
# placed the ARGS token earlier
action   --replace --match LABEL= --search '~ ARGS .*' --text ' ARGS %cmdline%'

# Specify which files to exclude when copying into the image or device
excludes --clear boot-image* *qcow2 *.raw *.raw--* :vcs-ignores  .git  bundled exclude

#flags    --verbose --debug
################################################################
ONLY     full create
descr    Create a bootable image for CentOS
build    --verbose modify --ext4 --minimal --debug  --create --size 50000 --force --copy-isolinux-as-syslinux --copy-iso-files

################################################################
ONLY     update 
descr    Update all files required for boot (exclude large bundled data)
build    --verbose modify --ext4 --overwrite --minimal

################################################################
ONLY     boot
action   --patch-syslinux
action   --syslinux --overwrite
descr    Install bootloader 
build    --verbose modify --ext4 --overwrite --minimal

################################################################
ONLY     isos
topdir   /
build    --verbose modify --ext4 

################################################################
ONLY     isos full
# Exclude all the isos except the main one, for a smaller USB
excludes --clear *-Everything-* *-Live-* *-Minimal-*
copy     entire dir ../../bundled/iso/ as isos

################################################################
ONLY     full menus update quick

# Specify which files to exclude when copying into the image or device
excludes --clear *.iso :vcs-ignores  .git  bundled examples-etc

################################################################
ONLY     quick provision bundle nexus menus soe htdocs private
descr    Quick update mode (kickstarts, soestack provisioning)
# Prepare to modify the image, clearing any automatic actions first
build    --verbose modify --ext4 --overwrite --clear

################################################################
ONLY     create full quick update provision
descr    Copy provisioning
topdir   /
copy     entire dir  ../ as provision
copy     single file ../kickstart/kickstart.cfg as ks.cfg

################################################################
ONLY     bundle full soe

# All the bundled data will be copied to this subdirectory on the USB.

excludes --clear *.iso :vcs-ignores  .git  bundled examples-etc

################################################################
ONLY     bundle full

# RPM files that need to be available before Nexus is provisioned
excludes --clear 
copy     entire dir ../../bundled/bootstrap-pkgs as bundled/bootstrap-pkgs

# Docker images that need to be available before Nexus is provisioned. ie the Nexus image.
# Clear the list of exclusions because the docker images to be copied next are in the gitignore.
excludes --clear
copy     entire dir ../../bundled/docker/  as bundled/docker

################################################################
# Because the nexus files are so large, a separate mode is provided
# just for updating them, instead of including them with the rest
# of the 'bundled' files.
# NOTE, before a nexus data backup, the following steps need to be
# performed to make sure it has yum repodata available (because it
# seems to discard it after a while)
#   - as root:
#        # delete cached yum data on host
#        yum clean all (possibly with metadata expire flag)
#        # download all repodata - triggering nexus to download it again
#        yum makecache 
#   - then do the nexus database export (from a backup db task)
#   - then stop nexus immediately so that the blobs state is consistent
#     with the exported databases
#
# Nexus blobs and database, so that nexus can be provisioned with 
# an existing cache of packages used by the SOE
ONLY     nexus full
topdir   bundled/nexus
# To copy pre-prepared db-backup and blobs archives from the bundled folder:
copy     single file  ../../bundled/nexus/db-backup.tar
copy     single file  ../../bundled/nexus/blobs.tar
# To instead copy an existing nexus instance on the host at /d/local/data/nexus:
#tar      contents dir /d/local/data/nexus/backups as db-backup.tar
#tar      entire dir   /d/local/data/nexus/blobs as blobs.tar

################################################################
ONLY     htdocs full soe
excludes --clear
copy     entire dir ../../htdocs as bundled/soe/htdocs

################################################################
# NOTE this one is done last because if copying the private files
# then we clear the vcs-ignores from
# the excludes prior to copying the private (local secrets) onto
# the USB.
ONLY     bundle full update soe 

# Copy the SOE so that the machine can be set up as a master
excludes --clear *.iso :vcs-ignores  .git  bundled examples-etc
copy     entire dir ../../ as bundled/soe

################################################################
ONLY     full update soe private
excludes --clear *~
copy     entire dir ../../salt/pillar/layers/private/ as bundled/soe/salt/pillar/layers/private
